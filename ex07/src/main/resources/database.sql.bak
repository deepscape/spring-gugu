//////////////////////////////////////////////////////////////////////////////////////
// 기본 게시판
create sequence seq_board;

create table tbl_board (
    bno number(10,0),
    title varchar2(200) not null,
    content varchar2(2000) not null,
    writer varchar2(50) not null,
    regdate date default sysdate,
    updatedate date default sysdate
);

alter table tbl_board add constraint pk_board primary key (bno);

insert into tbl_board (bno, title, content, writer) values (seq_board.nextval, '테스트 제목', '테스트 내용', 'user00');
commit;



//////////////////////////////////////////////////////////////////////////////////////
// 댓글

select * from TBL_BOARD;

create table tbl_reply (
    rno number(10,0),
    bno number(10,0) not null,
    reply varchar2(1000) not null,
    replyer varchar2(50) not null,
    replyDate date default sysdate,
    updateDate date default sysdate
);

create sequence seq_reply;
alter table tbl_reply add constraint pk_reply primary key (rno);
alter table tbl_reply add constraint fk_reply_board foreign key (bno) references TBL_BOARD (bno);
create index idx_reply on tbl_reply (bno desc, rno asc);

select rno, bno, reply, replyer, replydate, updateDate
from (
        select /*+INDEX(tbl_reply idx_reply) */
               rownum rn, bno, rno, reply, replyer, replyDate, updateDate
        from tbl_reply
        where 1=1
        and bno = 2
        and rno > 0
        and rowNum <= 10
     ) z1
where rn > 0;

select count(rno)
from tbl_reply
where bno = 2;

create table tbl_sample1( col1 varchar2(500));
create table tbl_sample2( col2 varchar2(50));

alter table tbl_board add (replycnt number default 0);

update tbl_board
set replycnt = (select count(rno) from tbl_reply where tbl_reply.bno = tbl_board.bno);



//////////////////////////////////////////////////////////////////////////////////////
// 첨부 파일

create table tbl_attach (
    uuid varchar2(100) not null,
    uploadPath varchar2(200) not null,
    fileName varchar2(300) not null,
    fileType char(1) default 'I',
    bno number(10,0)
);

alter table tbl_attach add constraint pk_attach primary key (uuid);
alter table tbl_attach add constraint fk_board_attach foreign key (bno) references TBL_BOARD(bno);

select * from tbl_attach where uploadpath = to_char(sysdate -1, 'yyyy/mm/dd');
select * from tbl_attach where uploadpath = to_char(sysdate, 'yyyy/mm/dd');
select * from tbl_attach;



//////////////////////////////////////////////////////////////////////////////////////
// Spring Security 기본 테이블 활용해서 로그인 처리

create table users(
      username varchar2(50) not null primary key,
      password varchar2(50) not null,
      enabled char(1) default '1');

create table authorities (
      username varchar2(50) not null,
      authority varchar2(50) not null,
      constraint fk_authorities_users foreign key(username) references users(username));
      
create unique index ix_auth_username on authorities (username,authority);

insert into users (username, password) values ('user00','pw00');
insert into users (username, password) values ('member00','pw00');
insert into users (username, password) values ('admin00','pw00');

insert into authorities (username, authority) values ('user00','ROLE_USER');
insert into authorities (username, authority) values ('member00','ROLE_MANAGER'); 
insert into authorities (username, authority) values ('admin00','ROLE_MANAGER'); 
insert into authorities (username, authority) values ('admin00','ROLE_ADMIN');
commit;

select * from users;
select * from authorities order by authority;



//////////////////////////////////////////////////////////////////////////////////////
// 기존의 테이블을 이용해서, 로그인 처리

create table tbl_member(
      userid varchar2(50) not null primary key,
      userpw varchar2(100) not null,
      username varchar2(100) not null,
      regdate date default sysdate, 
      updatedate date default sysdate,
      enabled char(1) default '1');


create table tbl_member_auth (
     userid varchar2(50) not null,
     auth varchar2(50) not null,
     constraint fk_member_auth foreign key(userid) references tbl_member(userid)
);



//////////////////////////////////////////////////////////////////////////////////////
// 자동 로그인(remember-me)

create table persistent_logins (
    username varchar2(64) not null,
    series varchar2(64) primary key,
    token varchar2(64) not null,
    last_used timestamp not null
);